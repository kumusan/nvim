[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Townk/vim-autoclose'

[[plugins]]
repo = 'w0rp/ale'

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'posva/vim-vue'
hook_add = '''
source ~/.config/nvim/plugins/vim-vue.rc.vim
'''

[[plugins]]
repo = 'prettier/vim-prettier'
on_ft = ['javascript', 'typescript', 'vue', 'css', 'scss', 'json', 'markdown']
hook_add = '''
source ~/.config/nvim/plugins/vim-prettier.rc.vim
'''


[[plugins]]
repo = 'leafgarland/typescript-vim'

[[plugins]]
repo = 'peitalin/vim-jsx-typescript'

[[plugins]]
repo = 'vim-syntastic/syntastic'
hook_add = '''
source ~/.config/nvim/plugins/syntastic.rc.vim
'''

[[plugins]]
repo = 'mtscout6/syntastic-local-eslint.vim'
hook_add = '''
source ~/.config/nvim/plugins/syntastic-local-eslint.rc.vim
'''

[[plugins]]
repo = 'digitaltoad/vim-pug'
on_ft = ['pug', 'vue']

[[plugins]]
repo = 'dNitro/vim-pug-complete'
hook_add = '''
source ~/.config/nvim/plugins/vim-pug-complete.rc.vim
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
rev = 'next'
build = 'bash install.sh'
hook_add = '''
source ~/.config/nvim/plugins/LanguageClient-neovim.rc.vim
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
    set noshowmode
    set laststatus=2
    let g:lightline = {
        \ 'colorscheme': 'wombat',
        \ 'active': {
        \   'left': [
        \     ['mode', 'paste'],
        \     ['gitbranch', 'readonly', 'filename', 'modified'],
        \     ['lsp'],
        \   ]
        \ },
        \ 'component_function': {
        \   'gitbranch': 'fugitive#head',
        \   'lsp': 'LSPStatus',
        \ },
        \ 'separator': { 'left': "\u2b80", 'right': "\u2b82" },
        \ 'subseparator': { 'left': "\u2b81", 'right': "\u2b83" },
        \}

    function! LSPStatus() abort
        let l:errors = 0
        let l:warnings = 0
        for item in getqflist()
            if item["type"] == "E"
                let l:errors += 1
            else
                let l:warnings += 1
            endif
        endfor
        return l:errors + l:warnings == 0 ? "LSP: OK" : "LSP: E:" . l:errors . " " . "W:" . l:warnings
    endfunction
'''

[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = 'rust'
hook_add = '''
source ~/.config/nvim/plugins/rust.rc.vim
'''


[[plugins]]
repo = 'osyo-manga/vim-anzu'
hook_add = '''
source ~/.config/nvim/plugins/anzu.rc.vim
'''

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_source = '''
    set ts=2 sw=2 et
    let g:indent_guides_start_level = 2
'''

[[plugins]]
repo = 'Shougo/neocomplete.vim'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'vim-airline/vim-airline'
depends = ['vim-airline/vim-airline-themes', 'ryanoasis/vim-devicons']

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add='''
let g:indentLine_enabled = 0
let g:indentLine_char = '|'
let g:indentLine_leadingSpaceEnabled = 1
let g:indentLine_leadingSpaceChar = 'Â·'
'''

[[plugins]]
repo = 'ryanoasis/vim-devicons'

[[plugins]]
repo = 'fatih/vim-go'

[[plugins]]
repo = 'preservim/nerdtree'

[[plugins]]
repo = 'pangloss/vim-javascript'

[[plugins]]
repo = 'othree/yajs.vim'

[[plugins]]
repo = 'othree/es.next.syntax.vim'

[[plugins]]
repo = 'othree/javascript-libraries-syntax.vim'

[[plugins]]
repo = 'othree/html5.vim'

[[plugins]]
repo = 'maxmellon/vim-jsx-pretty'

[[plugins]]
repo = 'ternjs/tern_for_vim'

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo = 'neomake/neomake'
on_path = '.*'
